const globals = require('globals')
const { READ } = require('@eslint-community/eslint-utils')

const globalsAllowList = []
const BROWSER_API_WARNING = 'Web APIs are not supported by the now platform'
const NO_GLOBAL_THIS = 'ES2020 `globalThis` variable is not supported by the now platform'

const getRestrictedGlobals = () => {
    const globalRules = [{name:'globalThis', message: NO_GLOBAL_THIS}]
    const browserRules = Object.keys(globals.browser)
        .filter((key) => !globalsAllowList.includes(key))
        .map((key) => {
            return {
                name: key,
                message: BROWSER_API_WARNING,
            }
        })
    return globalRules.concat(browserRules)
}

const getCoreNodeModules = () =>  ["assert","buffer","child_process","cluster","crypto","dgram","dns","domain","events","freelist","fs","http","https","module","net","os","path","punycode","querystring","readline","repl","smalloc","stream","string_decoder","sys","timers","tls","tracing","tty","url","util","vm","zlib"]

const getNodeGlobals = () => Object.keys(globals.nodeBuiltin)

const createTrackMap = (isNodeGlobals) => {
    const trackMapItems = isNodeGlobals ? getNodeGlobals() : getCoreNodeModules()
    const trackMap = {}
    
    for(const item of trackMapItems) {
        trackMap[item] = {
            [READ] : {
                name: item
            }
        }
    }

    return trackMap
}

module.exports = {
    getRestrictedGlobals,
    createTrackMap,
    getCoreNodeModules,
    getNodeGlobals
}