const { createTrackMap } = require('../util/utility')
const { ReferenceTracker } = require('@eslint-community/eslint-utils')

module.exports = {
    meta: {
        docs: {
            description: 'disallow unsupported Node.js built-in APIs',
            recommended: true
        },
        fixable: null,
        messages: {
            forbidden: 'The {{name}} Node.js API is not supported in now platform.'
        },
        schema:[],
        type:'problem',
    },
    create(context) {
        return {
            "Program:exit"(node){
                const sourceCode = context.sourceCode
                const tracker = new ReferenceTracker(sourceCode.getScope(node), { mode: 'legacy' })
                const trackMap = createTrackMap(false)
                const globalsTrackMap = createTrackMap(true)
                
                const references = [
                    ...tracker.iterateCjsReferences(trackMap),
                    ...tracker.iterateEsmReferences(trackMap),
                    ...tracker.iterateGlobalReferences(globalsTrackMap)
                ]

                for(const { node, info } of references) {
                    context.report({ node, messageId: 'forbidden', data: info })
                }
            }
        }
    }
}