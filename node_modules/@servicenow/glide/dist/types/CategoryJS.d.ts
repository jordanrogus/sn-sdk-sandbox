import { Context } from '../imports/Context';
import { Function } from '../imports/Function';
export declare class CategoryJS {
    availableForUserCriteria(action?: string, criteriaIDs?: Array<any>): void;
    canView(isMobile?: boolean, userId?: string): boolean;
    canViewForMobile(): boolean;
    constructor(cx?: Context, args?: any[], ctorObj?: Function, inNewExpr?: boolean);
    create(standardUpdate?: boolean): string;
    deleteRecord(standardUpdate?: boolean): void;
    getCatalog(): string;
    getDescription(): string;
    getFullDescription(): string;
    getHeaderIconSRC(): string;
    getHomepageImageSRC(): string;
    getID(): string;
    getIconSRC(): string;
    getItemIds(): Array<any>;
    getItemsCount(checkVisibilityOnPortal?: boolean): number;
    getMobilePicture(): string;
    getParent(): string;
    getSubCategories(): Array<any>;
    getTitle(): string;
    getViewableItemsCount(checkVisibilityOnPortal?: boolean): number;
    getViewableSubCategories(): Array<any>;
    hasVisibleItem(checkVisibilityOnPortal?: boolean, checkCanView?: boolean): boolean;
    hideDescriptionForMobile(): boolean;
    notAvailableForUserCriteria(action?: string, criteriaIDs?: Array<any>): void;
    read(columns?: Record<any, any>, standardUpdate?: boolean): Record<any, any>;
    setAttributes(attributes?: Record<any, any>): void;
    setTableName(tableName?: string): void;
    update(columnValues?: Record<any, any>, standardUpdate?: boolean): void;
}
