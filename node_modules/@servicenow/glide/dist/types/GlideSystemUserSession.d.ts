import { UpgradeDebuggerResult } from '../imports/UpgradeDebuggerResult';
import { User } from '../imports/User';
export declare class GlideSystemUserSession {
    static addErrorMessage(error?: any, messageKey?: string): void;
    static addErrorMessageNoSanitization(error?: any, messageKey?: string): void;
    static addInfoMessage(message?: any, messageKey?: string): void;
    static addInfoMessageNoSanitization(message?: any, messageKey?: string): void;
    static addMessage(bucket?: string, message?: any, messageKey?: string): void;
    static addUpgradeDebuggerArtifact(tableName?: string, sysId?: string): void;
    static createUser(common_name?: string): string;
    static flushAccessMessages(): void;
    static flushMessages(): void;
    static getAccessMessages(): Array<any>;
    static getCurrentApplicationId(): string;
    static getCurrentApplicationName(): string;
    static getCurrentApplicationScope(): string;
    static getDateFormat(): string;
    static getDateTimeFormat(): string;
    static getErrorMessages(): Array<any>;
    static getImpersonatingUserDisplayName(): string;
    static getImpersonatingUserID(): string;
    static getImpersonatingUserName(): string;
    static getInfoMessages(): Array<any>;
    static getMessages(type?: string): Array<any>;
    static getNavMessage(): any;
    static getSessionToken(): string;
    static getSysTimeZone(): string;
    static getTimeFormat(): string;
    static getTrivialMessages(): Array<any>;
    static getUpgradeDebuggerResult(): UpgradeDebuggerResult;
    static getUrlOnStack(): string;
    static getUser(): User;
    static getUserDisplayName(): string;
    static getUserID(): string;
    static getUserName(): string;
    static getUserNameByUserID(userID?: string): string;
    static hasMessages(buckets?: any): boolean;
    static hasRoleInGroup(role?: any, group?: any): boolean;
    static isCurrentApplicationCrossScopeProtected(): boolean;
    static isCurrentApplicationCustom(): boolean;
    static isCurrentApplicationInGlobalScope(): boolean;
    static isInteractive(): boolean;
    static isLoggedIn(): boolean;
    static isScopeAdminForAnyApp(): boolean;
    static isUpgradeDebuggerEnabled(): boolean;
    static setCurrentApplicationId(appId?: string): string;
    static setRedirect(o?: any): void;
    static setReturn(o?: any): void;
    static setTrackMetadataDeletes(onOrOff?: boolean): boolean;
    static statsThisSession(onOff?: boolean): void;
    static statsThisSessionThreshold(threshold?: number): void;
    static suppressTextIndex(suppress?: boolean): boolean;
    static suppressUpdateSynch(suppress?: boolean): boolean;
    static updateUserRoles(userSysId?: string): void;
    static user(): string;
    static userID(): string;
    static user_id(): string;
}
